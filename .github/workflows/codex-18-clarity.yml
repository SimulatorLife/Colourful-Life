name: Codex 18 – Clarity Improvements
on:
  schedule:
    - cron: '0 10,22 * * *' # twice daily at 10:00, 22:00 UTC
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  run:
    uses: ./.github/workflows/_codex-open-pr-and-ping.yml
    secrets: inherit
    with:
      pr_title: 'Codex: Clarity Improvements'
      pr_body: 'Seed PR for Codex to improve readability and clarity atop current master.'
      prompt: >
        Sweep the codebase and commit at least one concrete clarity improvement in a single coherent area (module, small subsystem, function, file, or tight file cluster) without changing behavior. You may not respond “no issues found.” If major opportunities are scarce, choose a micro-target and improve it (e.g., rename a misleading identifier, replace a magic number with a named constant, fix a spelling/grammar mistake in comments/docs, clarify an ambiguous comment, or unnest a needlessly nested branch). Apply whichever options are most impactful and appropriate for that area: rename functions/variables/modules/files to reflect intent; fix spelling/grammar in identifiers, comments, or documentation; add brief, high-signal comments only where context is missing (explain why, not what); simplify control flow with early returns/guard clauses; extract helpers from large or duplicated blocks to improve readability and reuse, or inline trivial one-line wrappers that add no value; clarify units/ranges/side effects; make parameters/return values self-describing via renaming/reordering/grouping; standardize terminology across touched files; and, if a function/file is clearly misplaced, move it to a better-aligned directory/module to improve cohesion/discoverability. Keep the blast radius small (aim for a tight diff), avoid API/behavior changes, add no new dependencies, avoid style-only churn, and never delete tests. In your commit message and PR body, include a short “Why this” justification describing the chosen hotspot and the expected clarity gain, plus before/after examples for any renames, fixes, or flow simplifications. Ensure npm run lint and npm test pass.
