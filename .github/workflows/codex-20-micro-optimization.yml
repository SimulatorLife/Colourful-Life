name: Codex 20 â€“ Targeted Micro-Optimization
on:
  schedule:
    - cron: "20 */13 * * *" # every 13 hours (staggered vs. other perf jobs)
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  run:
    uses: ./.github/workflows/_codex-open-pr-and-ping.yml
    secrets: inherit
    with:
      pr_title: "Codex: Targeted Micro-Optimization"
      pr_body: "Seed PR for Codex to implement a localized, measurable micro-optimization atop current master."
      branch_prefix: "codex"
      base_branch: "master"
      prompt: >
        Identify a single, frequently executed micro-hot path (tight loop, inner render/update step, small utility on hot code paths)
        and implement a minimal, behavior-preserving micro-optimization that yields a measurable improvement. Keep the blast radius tiny:
        no architectural rewrites, no interface changes, and no new heavy dependencies. Prefer straightforward changes such as: reducing
        allocations, tightening iteration, precomputing invariants, using simpler data shapes, avoiding needless cloning/stringification,
        hoisting constants, replacing polymorphic branches with predictable paths, or short-circuiting common cases. Add a very small
        before/after measurement (micro-benchmark, timing probe, or deterministic counter) in the PR body to demonstrate improvement,
        and include guardrails/tests for correctness. If no safe micro-hot path is found, add a minimal benchmark harness around a likely
        hotspot to enable future passes rather than making speculative changes. Keep the diff small, readable, and well-commented; ensure
        lint/tests pass and that readability is not sacrificed for cleverness.
